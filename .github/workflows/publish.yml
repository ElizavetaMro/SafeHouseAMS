name: Build and deploy wasm and backend
on:
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    uses: zetroot/SafehouseAMS/.github/workflows/build_job.yml@master
    with:
      send_testcoverage: false

  build_images:
    uses: zetroot/SafehouseAMS/.github/workflows/docker_build.yml@master
    with:
      version: 'staging'

#  publish-wasm:
#    runs-on: ubuntu-latest
#    needs:
#      - build
#    steps:
#      - name: Checkout üõéÔ∏è
#        uses: actions/checkout@v2.3.1
#
#      - name: download wasm artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: artifact
#          path: artifact/
#
#      - name: Display structure of downloaded files
#        run: ls -R
#
#    # –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª .nojekyll —á—Ç–æ–±—ã –æ—Ç–≤—è–∑–∞—Ç—å—Å—è –æ—Ç –ø—Ä–∞–≤–∏–ª–∞ Jekyll –ø–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—é –ø—É—Ç–µ–π –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å –Ω–∏–∂–Ω–µ–≥–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è. –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è blazor
#      - name: Add .nojekyll file
#        run: touch artifact/wwwroot/.nojekyll
#
#      # copy index.html to 404.html to serve the same file when a file is not found
#      - name: copy index.html to 404.html
#        run: cp artifact/wwwroot/index.html artifact/wwwroot/404.html
#
#      # –Ω–∞–∫–æ–Ω–µ—Ü, –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤–µ—Ç–∫—É gh-pages
#      - name: Commit wwwroot to GitHub Pages
#        uses: JamesIves/github-pages-deploy-action@4.1.5
#        with:
#          BRANCH: gh-pages
#          FOLDER: artifact/wwwroot

#  deploy-image-on-server:
#    runs-on: ubuntu-latest
#    needs:
#      - build-and-publish-image
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: copy file via ssh
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.SERVER_SSH_HOST }}
#          username: ${{ secrets.SERVER_SSH_USER }}
#          key: ${{ secrets.SERVER_SSH_KEY }}
#          source: "docker-compose.yaml"
#          target: "./"
#          overwrite: true
#
#      - name: restart docker
#        uses: cross-the-world/ssh-pipeline@master
#        with:
#          host: ${{ secrets.SERVER_SSH_HOST }}
#          user: ${{ secrets.SERVER_SSH_USER }}
#          key: ${{ secrets.SERVER_SSH_KEY }}
#          connect_timeout: 10s
#          script: |
#            docker-compose stop &&
#            docker-compose pull &&
#            docker-compose up -d
